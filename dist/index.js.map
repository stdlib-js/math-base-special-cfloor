{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex-float64-ctor' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar real = require( '@stdlib/complex-real' );\nvar imag = require( '@stdlib/complex-imag' );\n\n\n// MAIN //\n\n/**\n* Rounds a double-precision floating-point complex number toward negative infinity.\n*\n* @param {Complex128} z - complex number\n* @returns {Complex128} result\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n*\n* var v = cfloor( new Complex128( -4.2, 5.5 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns -5.0\n*\n* var im = imag( v );\n* // returns 5.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n*\n* var v = cfloor( new Complex128( 9.99999, 0.1 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 9.0\n*\n* var im = imag( v );\n* // returns 0.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n*\n* var v = cfloor( new Complex128( 0.0, 0.0 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 0.0\n*\n* var im = imag( v );\n* // returns 0.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n*\n* var v = cfloor( new Complex128( NaN, NaN ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns NaN\n*\n* var im = imag( v );\n* // returns NaN\n*/\nfunction cfloor( z ) {\n\treturn new Complex128( floor( real( z ) ), floor( imag( z ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = cfloor;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point complex number toward negative infinity.\n*\n* @module @stdlib/math-base-special-cfloor\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n* var cfloor = require( '@stdlib/math-base-special-cfloor' );\n*\n* var v = cfloor( new Complex128( -4.2, 5.5 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns -5.0\n*\n* var im = imag( v );\n* // returns 5.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n* var cfloor = require( '@stdlib/math-base-special-cfloor' );\n*\n* var v = cfloor( new Complex128( 9.99999, 0.1 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 9.0\n*\n* var im = imag( v );\n* // returns 0.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n* var cfloor = require( '@stdlib/math-base-special-cfloor' );\n*\n* var v = cfloor( new Complex128( 0.0, 0.0 ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns 0.0\n*\n* var im = imag( v );\n* // returns 0.0\n*\n* @example\n* var Complex128 = require( '@stdlib/complex-float64-ctor' );\n* var real = require( '@stdlib/complex-real' );\n* var imag = require( '@stdlib/complex-imag' );\n* var cfloor = require( '@stdlib/math-base-special-cfloor' );\n*\n* var v = cfloor( new Complex128( NaN, NaN ) );\n* // returns <Complex128>\n*\n* var re = real( v );\n* // returns NaN\n*\n* var im = imag( v );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,8BAA+B,EACrDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,sBAAuB,EACvCC,EAAO,QAAS,sBAAuB,EAmE3C,SAASC,EAAQC,EAAI,CACpB,OAAO,IAAIL,EAAYC,EAAOC,EAAMG,CAAE,CAAE,EAAGJ,EAAOE,EAAME,CAAE,CAAE,CAAE,CAC/D,CAKAN,EAAO,QAAUK,ICXjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "Complex128", "floor", "real", "imag", "cfloor", "z", "main"]
}
